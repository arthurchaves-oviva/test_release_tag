name: recreate_branch

on:
  workflow_dispatch:
    inputs:
      call_mode:
        description: Select how to call the workflow
        required: true
        type: choice
        default: all_qa_branches
        options:
          - release/qa
          - release/qa_2
          - all_qa_branches
          - custom_branch
      custom_branch:
        description: Provide a custom branch (only if custom_branch is selected)
        required: false
        type: string
  schedule:
    - cron: '0 5 * * 1'
    - cron: '13 * * * *'
    - cron: '*/5 * * * *'
    - cron: '* * * * *'

concurrency:
  group: recreate_branch

permissions:
  contents: write

jobs:
  recreate_branch:
    name: Recreate branch
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'schedule' && 'recreate-branch-auto' || 'recreate-branch' }}

    steps:
      - name: Resolve target branch
        env:
          CALL_MODE: ${{ github.event.inputs.call_mode }}
          CUSTOM_BRANCH: ${{ github.event.inputs.custom_branch }}
        run: |
          if [ "$GITHUB_EVENT_NAME" = "schedule" ]; then
            # For scheduled runs, always process all QA branches
            TARGETS=$'release/qa\nrelease/qa_2'
          else
            case "$CALL_MODE" in
              custom_branch)
                if [ -z "$CUSTOM_BRANCH" ]; then
                  echo "Error: custom_branch must be provided when call_mode=custom_branch" >&2
                  exit 1
                fi
                TARGETS="$CUSTOM_BRANCH"
                ;;
              all_qa_branches)
                TARGETS=$'release/qa\nrelease/qa_2'
                ;;
              release/qa|release/qa_2)
                TARGETS="$CALL_MODE"
                ;;
              *)
                echo "Unknown call_mode: $CALL_MODE" >&2
                exit 1
                ;;
            esac
          fi
          echo "Target branches:" && printf '%s\n' "$TARGETS" | sed 's/^/ - /'
          {
            echo 'BRANCHES_TO_RECREATE<<EOF'
            printf '%s\n' "$TARGETS"
            echo 'EOF'
          } >> "$GITHUB_ENV"

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "DWH QA github-action"
          git config user.email "github-actions@github.com"

      - name: Recreate branches
        run: |
          recreate_branch() {
            branch_name="$1"
            echo "Recreating branch $branch_name"
            git checkout main
            git pull --rebase
            git branch -d "$branch_name" || true
            git push origin --delete "$branch_name" || true
            git checkout main
            git checkout -b "$branch_name"
            git push origin -u "$branch_name"
          }
          echo "$BRANCHES_TO_RECREATE" | while IFS= read -r BRANCH; do
            [ -z "$BRANCH" ] && continue
            recreate_branch "$BRANCH"
          done


